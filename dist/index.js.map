{"version":3,"file":"index.js","sources":["../src/utils/basicChartStyle.js","../src/utils/transformConfig.js","../src/utils/normalizeData.js","../src/hooks/useECharts.js","../src/components/Bar.js","../src/components/Line.js","../src/components/Pie.js","../src/components/Doughnut.js","../src/components/ScatterPlot.js","../src/components/StackBar.js","../src/components/StackClusterColumn.js","../src/components/StackLine.js","../src/components/MapView.js"],"sourcesContent":["export const backgroundColor = {\n  backgroundColor: 'transparent'\n};\n\nexport const Animation = {\n  animation: true,\n  animationThreshold: 2000,\n  animationDuration: 1000,\n  animationEasing: 'cubicOut',\n  animationDelay: 0,\n  animationDurationUpdate: 300,\n  animationEasingUpdate: 'cubicOut',\n  animationDelayUpdate: 0\n};\n\nexport const TextStyle = {\n  color: '#000',\n  fontSize: 12,\n  fontWeight: 'bold'\n};\n\nexport const Colors = {\n  color: [\n    '#4475B4',\n    '#73ADD1',\n    '#AAD9E8',\n    '#FEE08F',\n    '#FDAE60',\n    '#F36C42',\n    '#D73027'\n  ]\n};\n\nexport const Legend = {\n  show: true,\n  icon: 'circle',\n  top: 35,\n  left: 'center',\n  align: 'left',\n  orient: 'horizontal',\n  itemGap: 10,\n  textStyle: {\n    fontWeight: 'normal',\n    fontSize: 12\n  }\n};\n\nexport const Title = {\n  show: true,\n  text: '',\n  subtext: '',\n  textAlign: 'center',\n  left: '50%',\n  textStyle: {\n    color: '#000',\n    fontSize: 14,\n    fontWeight: 'bold'\n  }\n};\n\nexport const Grid = {\n  containLabel: true,\n  left: '4%',\n  right: '4%',\n  bottom: '10%',\n  top: '25%'\n};\n\nexport const Tooltip = {\n  trigger: 'item',\n  axisPointer: {\n    type: 'shadow'\n  },\n  textStyle: {\n    color: '#000',\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n};\n\nexport const Axis = {\n  axisLabel: {\n    color: '#000',\n    fontSize: 12,\n    fontWeight: 'normal'\n  },\n  axisLine: {\n    lineStyle: {\n      color: '#000'\n    }\n  },\n  axisTick: {\n    lineStyle: {\n      color: '#000'\n    }\n  }\n};\n","import {\n  Animation,\n  Colors,\n  TextStyle,\n  backgroundColor,\n  Title,\n  Grid,\n  Tooltip,\n  Axis,\n  Legend\n} from './basicChartStyle';\n\nconst transformConfig = ({\n  title,\n  xAxisLabel = null,\n  yAxisLabel = null,\n  horizontal = false,\n  dimensions = [],\n  showAxis = true\n}) => {\n  let legend = {\n    ...Legend,\n    data: dimensions.slice(1)\n  };\n\n  let axis = {\n    xAxis: {\n      type: horizontal ? 'value' : 'category',\n      name: xAxisLabel,\n      nameTextStyle: { ...TextStyle },\n      nameLocation: 'center',\n      nameGap: 45,\n      ...Axis\n    },\n    yAxis: {\n      type: horizontal ? 'category' : 'value',\n      name: yAxisLabel,\n      nameTextStyle: { ...TextStyle },\n      nameLocation: 'end',\n      nameGap: 20,\n      ...Axis\n    }\n  };\n\n  if (!showAxis) {\n    legend = { ...Legend };\n    axis = {};\n  }\n\n  return {\n    title: {\n      ...Title,\n      text: title\n    },\n    grid: {\n      ...Grid\n    },\n    legend,\n    tooltip: {\n      ...Tooltip\n    },\n    ...axis,\n    series: [],\n    ...Colors,\n    ...backgroundColor,\n    ...Animation\n  };\n};\n\nexport default transformConfig;\n","const sortKeys = (keys = []) => {\n  // Identify the key to be placed first based on criteria\n  const dynamicKey = keys.find((key) => isNaN(key));\n  const otherKeys = keys.filter((key) => key !== dynamicKey);\n  // Combine the dynamic key with the other keys\n  return [dynamicKey, ...otherKeys];\n};\n\nconst normalizeData = (data) => {\n  if (data?.length === 0) {\n    return {\n      dimensions: [],\n      source: []\n    };\n  }\n  if (Array.isArray(data)) {\n    if (data.length > 0 && Array.isArray(data[0])) {\n      // Handle tabular format (2d array)\n      const [categories, ...rows] = data;\n\n      const dimensions = categories.map((item) => item.toLowerCase());\n      const source = rows.map((row) => {\n        const obj = {};\n        categories.forEach((cat, index) => {\n          obj[cat.toLowerCase()] = row[index] !== undefined ? row[index] : 0;\n        });\n        return obj;\n      });\n\n      return {\n        dimensions,\n        source\n      };\n    } else if (data.length > 0 && typeof data[0] === 'object') {\n      // Handle key-value format (Row based key-value format (object array))\n      const keys = Array.from(\n        new Set(data.flatMap((d) => (d ? Object.keys(d) : [])))\n      );\n      const sortedKeys = sortKeys(keys);\n\n      const dimensions = sortedKeys;\n      const source = data\n        .filter((i) => i)\n        .map((item) => {\n          const obj = {};\n          sortedKeys.forEach((key) => {\n            obj[key] = item[key] !== undefined ? item[key] : 0;\n          });\n          return obj;\n        });\n\n      return {\n        dimensions,\n        source\n      };\n    }\n  } else if (typeof data === 'object') {\n    // Handle object-based format (Column based key-value format)\n    const keys = Object.keys(data);\n    const maxLength = Math.max(...keys.map((key) => data[key].length));\n    const sortedKeys = sortKeys(keys);\n\n    const source = Array.from({ length: maxLength }, (_, i) => {\n      return sortedKeys.reduce((acc, key) => {\n        acc[key] = data[key][i] !== undefined ? data[key][i] : 0;\n        return acc;\n      }, {});\n    });\n\n    return {\n      dimensions: sortedKeys,\n      source\n    };\n  }\n\n  throw new Error('Unsupported data format');\n};\n\nexport default normalizeData;\n","import { useEffect, useRef } from 'react';\nimport * as echarts from 'echarts';\nimport transformConfig from '../utils/transformConfig';\nimport normalizeData from '../utils/normalizeData';\n\nconst useECharts = ({ config = {}, data = [], getOptions = () => {} }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    let chart;\n\n    if (chartRef.current) {\n      setTimeout(() => {\n        if (!chart && chartRef.current) {\n          chart = echarts.init(chartRef.current);\n        }\n        const { dimensions, source } = normalizeData(data);\n        const transformedConfig = transformConfig({ ...config, dimensions });\n        const options = {\n          ...transformedConfig,\n          dataset: {\n            dimensions,\n            source\n          },\n          ...getOptions({ dimensions, transformedConfig })\n        };\n        if (chart) {\n          chart.setOption(options);\n        }\n      }, 0);\n    }\n\n    return () => {\n      if (chart) {\n        chart.dispose();\n      }\n    };\n  }, [config, data, getOptions]);\n\n  return chartRef;\n};\n\nexport default useECharts;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({ horizontal = false, dimensions = [] }) => {\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'bar',\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    series\n  };\n};\n\nconst Bar = ({ config, data, horizontal = false }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions }) => getOptions({ horizontal, dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Bar;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({ horizontal = false, dimensions = [] }) => {\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'line',\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    series\n  };\n};\n\nconst Line = ({ config, data, horizontal = false }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions }) => getOptions({ horizontal, dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Line;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({ dimensions = [] }) => {\n  const itemName = dimensions[0];\n  const value = dimensions.slice(1);\n  return {\n    series: [\n      {\n        type: 'pie',\n        radius: '60%',\n        encode: {\n          itemName,\n          value\n        }\n      }\n    ]\n  };\n};\n\nconst Pie = ({ config, data }) => {\n  const chartRef = useECharts({\n    config: { ...config, showAxis: false },\n    data,\n    getOptions: ({ dimensions }) => getOptions({ dimensions })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Pie;\n","import React, { useMemo } from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst MAX = 60;\n\nconst getOptions = ({ dimensions = [], radius }) => {\n  const itemName = dimensions[0];\n  const value = dimensions.slice(1);\n  return {\n    series: [\n      {\n        type: 'pie',\n        radius,\n        encode: {\n          itemName,\n          value\n        }\n      }\n    ]\n  };\n};\n\nconst Doughnut = ({ config, data, size = 40 }) => {\n  const torus = useMemo(() => {\n    if (size >= MAX) {\n      return 0;\n    }\n    return MAX - size;\n  }, [size]);\n\n  const chartRef = useECharts({\n    config: { ...config, showAxis: false },\n    data,\n    getOptions: ({ dimensions }) =>\n      getOptions({ dimensions, radius: [`${torus}%`, `${MAX}%`] })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default Doughnut;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst scatterTransform = (input) => {\n  if (Array.isArray(input)) {\n    // Check if it's a 2D array\n    if (Array.isArray(input[0])) {\n      return input.map(([label, x, y]) => [x, y, label]);\n    }\n\n    // Check if it's an array of key-value objects\n    if (typeof input[0] === 'object' && !Array.isArray(input[0])) {\n      return input.map(({ label, x, y }) => [x, y, label]);\n    }\n  }\n\n  // Check if it's an array containing an object\n  if (typeof input === 'object') {\n    return Object.keys(input).map((key) => [...input[key], key]);\n  }\n\n  throw new Error('Invalid input format');\n};\n\nconst getOptions = ({ data, symbolSize, showLabel, transformedConfig }) => {\n  return {\n    series: [\n      {\n        type: 'scatter',\n        symbolSize,\n        emphasis: {\n          focus: 'self'\n        },\n        label: {\n          show: showLabel,\n          formatter: (p) => p.data[2],\n          minMargin: 10,\n          position: 'top'\n        }\n      }\n    ],\n    xAxis: {\n      ...transformedConfig.xAxis,\n      splitLine: {\n        show: true\n      }\n    },\n    dataset: {\n      source: scatterTransform(data)\n    }\n  };\n};\n\nconst ScatterPlot = ({ config, data, symbolSize = 10, showLabel = true }) => {\n  const chartRef = useECharts({\n    config,\n    getOptions: ({ transformedConfig }) =>\n      getOptions({ data, symbolSize, showLabel, transformedConfig })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default ScatterPlot;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({\n  dimensions,\n  stackMapping,\n  transformedConfig,\n  horizontal = true\n}) => {\n  // Reverse the stackMapping to get a dimension to stack group map\n  const dimensionToStackMap = {};\n  Object.keys(stackMapping).forEach((stackGroup) => {\n    stackMapping[stackGroup].forEach((dim) => {\n      dimensionToStackMap[dim] = stackGroup;\n    });\n  });\n\n  // Create series based on the reversed stack mapping\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'bar',\n    stack: dimensionToStackMap[dim] || 'defaultStack',\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    tooltip: {\n      ...transformedConfig.tooltip,\n      trigger: 'axis'\n    },\n    series\n  };\n};\n\nconst StackBar = ({ config, data, stackMapping = {}, horizontal = true }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions, transformedConfig }) =>\n      getOptions({ dimensions, stackMapping, horizontal, transformedConfig })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default StackBar;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({\n  transformedConfig,\n  horizontal = false,\n  dimensions = []\n}) => {\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'bar',\n    barGap: 0,\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    tooltip: {\n      ...transformedConfig.tooltip,\n      trigger: 'axis'\n    },\n    series\n  };\n};\n\nconst StackClusterColumn = ({ config, data, horizontal = false }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions, transformedConfig }) =>\n      getOptions({ horizontal, dimensions, transformedConfig })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default StackClusterColumn;\n","import React from 'react';\nimport { useECharts } from '../hooks';\nimport styles from '../styles.module.css';\n\nconst getOptions = ({ dimensions, transformedConfig, horizontal = true }) => {\n  const axis = horizontal ? 'yAxis' : 'xAxis';\n\n  const series = dimensions.slice(1).map((dim) => ({\n    name: dim,\n    type: 'line',\n    stack: 'defaultStack',\n    areaStyle: {},\n    encode: {\n      x: horizontal ? dim : 'category',\n      y: horizontal ? 'category' : dim\n    }\n  }));\n\n  return {\n    ...transformedConfig,\n    tooltip: {\n      ...transformedConfig.tooltip,\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross'\n      }\n    },\n    [axis]: {\n      ...transformedConfig[axis],\n      boundaryGap: false\n    },\n    series\n  };\n};\n\nconst StacLine = ({ config, data, horizontal = true }) => {\n  const chartRef = useECharts({\n    config: { ...config, horizontal },\n    data,\n    getOptions: ({ dimensions, transformedConfig }) =>\n      getOptions({ dimensions, horizontal, transformedConfig })\n  });\n\n  return (\n    <div\n      ref={chartRef}\n      role=\"figure\"\n      className={styles.container}\n    />\n  );\n};\n\nexport default StacLine;\n","// src/MapView.js\nimport React, {\n  useEffect,\n  useRef,\n  forwardRef,\n  useImperativeHandle\n} from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerShadow from 'leaflet/dist/images/marker-shadow.png';\n\n// Define the default icon for markers\nconst defaultIcon = L.icon({\n  iconUrl: typeof markerIcon === 'object' ? markerIcon?.src : markerIcon,\n  shadowUrl:\n    typeof markerShadow === 'object' ? markerShadow?.src : markerShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nconst getObjectFromString = (path) =>\n  path.split('.').reduce((obj, key) => obj && obj[key], window);\n\nconst MapView = forwardRef(({ data = [], config = {}, layers = [] }, ref) => {\n  const mapContainerRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n\n  useEffect(() => {\n    if (mapInstanceRef.current === null && mapContainerRef.current) {\n      const baseMaps = layers\n        ?.filter((l) => l?.url || l?.source)\n        ?.map((ly, lx) => {\n          const { url: tileURL, source, name: tn, ...lyProps } = ly;\n\n          const tileName = tn || lx + 1;\n\n          if (source) {\n            if (!getObjectFromString(source)) {\n              return null;\n            }\n            const { url: windowURL, ...wProps } = getObjectFromString(source);\n            return {\n              name: tileName,\n              tile: L.tileLayer(windowURL, { ...wProps })\n            };\n          }\n          return {\n            name: tileName,\n            tile: L.tileLayer(tileURL, { ...lyProps })\n          };\n        })\n        ?.filter((ly) => ly?.name)\n        ?.reduce((curr, prev) => {\n          curr[prev.name] = prev.tile;\n          return curr;\n        }, {});\n\n      const groupedMarkers = data\n        ?.filter((d) => d?.point && d?.label)\n        ?.reduce((curr, prev) => {\n          const key = prev?.groupName || 'Data';\n          if (!curr[key]) {\n            curr[key] = [];\n          }\n          curr[key].push(\n            L.marker(prev.point, { icon: defaultIcon }).bindPopup(prev.label)\n          );\n          return curr;\n        }, {});\n\n      const overlayMaps = Object.keys(groupedMarkers).reduce((acc, key) => {\n        acc[key] = L.layerGroup(groupedMarkers[key]);\n        return acc;\n      }, {});\n\n      const defaultBkey = Object.keys(baseMaps)?.[0];\n      const defaultPKey = Object.keys(overlayMaps)?.[0];\n      const defaultLayers = baseMaps?.[defaultBkey] || [];\n      if (overlayMaps?.[defaultPKey]?.[0]) {\n        defaultLayers.push(overlayMaps[defaultPKey][0]);\n      }\n\n      // Initialize the map only if it hasn't been initialized yet\n      const map = L.map(mapContainerRef.current, {\n        center: config?.center || [0, 0],\n        zoom: config?.zoom || 2,\n        layers: defaultLayers\n      });\n\n      // Add layers controls\n      L.control.layers(baseMaps, overlayMaps).addTo(map);\n\n      // Save the map instance to ref\n      mapInstanceRef.current = map;\n    }\n\n    // Cleanup function to remove map instance on unmount\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, [data, config, layers]);\n\n  useImperativeHandle(ref, () => ({\n    zoomIn: () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.zoomIn();\n      }\n    },\n    zoomOut: () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.zoomOut();\n      }\n    },\n    getCenter: () => {\n      if (mapInstanceRef.current) {\n        return mapInstanceRef.current.getCenter();\n      }\n      return null;\n    }\n  }));\n\n  return (\n    <div\n      ref={mapContainerRef}\n      style={{\n        height: config?.height || '100vh',\n        width: config?.width || '100%'\n      }}\n      data-testid=\"map-view\"\n    />\n  );\n});\n\nexport default MapView;\n"],"names":["backgroundColor","Animation","animation","animationThreshold","animationDuration","animationEasing","animationDelay","animationDurationUpdate","animationEasingUpdate","animationDelayUpdate","TextStyle","color","fontSize","fontWeight","Colors","Legend","show","icon","top","left","align","orient","itemGap","textStyle","Title","text","subtext","textAlign","Grid","containLabel","right","bottom","Tooltip","trigger","axisPointer","type","Axis","axisLabel","axisLine","lineStyle","axisTick","transformConfig","_ref","title","_ref$xAxisLabel","xAxisLabel","_ref$yAxisLabel","yAxisLabel","_ref$horizontal","horizontal","_ref$dimensions","dimensions","_ref$showAxis","showAxis","legend","_extends","data","slice","axis","xAxis","name","nameTextStyle","nameLocation","nameGap","yAxis","grid","tooltip","series","sortKeys","keys","dynamicKey","find","key","isNaN","otherKeys","filter","concat","normalizeData","length","source","Array","isArray","categories","rows","map","item","toLowerCase","row","obj","forEach","cat","index","undefined","from","Set","flatMap","d","Object","sortedKeys","i","maxLength","Math","max","apply","_","reduce","acc","Error","useECharts","_ref$config","config","_ref$data","_ref$getOptions","getOptions","chartRef","useRef","useEffect","chart","current","setTimeout","echarts","_normalizeData","transformedConfig","options","dataset","setOption","dispose","dim","encode","x","y","Bar","_ref2","_ref2$horizontal","_ref3","React","createElement","ref","role","className","styles","container","Line","itemName","value","radius","Pie","MAX","Doughnut","_ref2$size","size","torus","useMemo","scatterTransform","input","label","symbolSize","showLabel","emphasis","focus","formatter","p","minMargin","position","splitLine","ScatterPlot","_ref4","_ref4$symbolSize","_ref4$showLabel","_ref5","stackMapping","dimensionToStackMap","stackGroup","stack","StackBar","_ref2$stackMapping","barGap","StackClusterColumn","_extends2","areaStyle","boundaryGap","StacLine","defaultIcon","L","iconUrl","markerIcon","src","shadowUrl","markerShadow","iconSize","iconAnchor","popupAnchor","shadowSize","getObjectFromString","path","split","window","MapView","forwardRef","_ref$layers","layers","mapContainerRef","mapInstanceRef","_layers$filter","_layers$filter$map","_layers$filter$map$fi","_data$filter","_Object$keys","_Object$keys2","_overlayMaps$defaultP","baseMaps","l","url","ly","lx","tileURL","tn","lyProps","_objectWithoutPropertiesLoose","_excluded","tileName","_getObjectFromString","windowURL","wProps","_excluded2","tile","tileLayer","curr","prev","groupedMarkers","point","groupName","push","marker","bindPopup","overlayMaps","layerGroup","defaultBkey","defaultPKey","defaultLayers","center","zoom","control","addTo","remove","useImperativeHandle","zoomIn","zoomOut","getCenter","style","height","width"],"mappings":"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"}